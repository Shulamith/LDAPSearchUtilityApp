{"version":3,"sources":["Components/userAccountControlFlags.js","App.js","index.js"],"names":["AccountControlFlagsTable","props","Object","fromEntries","entries","JSON","parse","dataSource","map","Array","from","columns","App","callAPI","axios","post","username","state","then","res","setState","apiResponse","data","handleInputChange","event","target","name","value","key","age","address","title","dataIndex","className","this","userAccountControl","lockoutTime","lockedMSG","userAccountControlFlags","type","onChange","size","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mWAYeA,EARkB,SAACC,GAEhBC,OAAOC,YAAYD,OAAOE,QAAQC,KAAKC,MAAML,EAAMM,aAAaC,KAAI,yCAA6B,CAA7B,eACjF,OACA,6BACA,kBAAC,IAAD,CAAOD,WAAcE,MAAMC,KAAKT,EAAMM,YAAaI,QAAWV,EAAMU,YCoF1DC,E,kDAtFb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IA8BRY,QAAU,WACRC,IAAMC,KAAK,mBAAoB,CAI7BC,SAAU,EAAKC,MAAMD,WAEpBE,MAAK,SAAAC,GAAG,OAAI,EAAKC,SAAS,CAAEC,YAAaF,EAAIG,WAtC/B,EAwCnBC,kBAAoB,SAACC,GACnB,IAAMC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACrB,EAAKP,SAAL,eACGM,EAAOC,KA3CV,EAAKV,MAAQ,CAAEI,YAAa,GAAIL,SAAU,IAC1C,EAAKT,WAAa,CAChB,CACEqB,IAAK,IACLF,KAAM,OACNG,IAAK,GACLC,QAAS,qBAEX,CACEF,IAAK,IACLF,KAAM,OACNG,IAAK,GACLC,QAAS,sBAId,EAAKnB,QAAU,CACZ,CACEoB,MAAO,qBACPC,UAAW,iBACXJ,IAAK,kBAEP,CACEG,MAAO,QACPC,UAAW,QACXJ,IAAK,UA3BQ,E,qDAmDjB,OACE,yBAAKK,UAAU,OACb,4BAAQA,UAAU,cAChB,kFAIDC,KAAKjB,MAAMI,YAAYL,UACtB,0BAAMiB,UAAU,gBACd,qCAAWC,KAAKjB,MAAMI,YAAYL,UAClC,oDAA0BkB,KAAKjB,MAAMI,YAAYc,mBAAjD,KACA,2CAAiBD,KAAKjB,MAAMI,YAAYe,YAAxC,IAAsDF,KAAKjB,MAAMI,YAAYgB,WAC7E,kBAAC,EAAD,CAAW9B,WAAc2B,KAAKjB,MAAMI,YAAYiB,wBAAyB3B,QAAWuB,KAAKvB,WAI7F,0BAAMsB,UAAU,YAUd,8BAAM,yDACF,2BAAOA,UAAU,iBAAiBP,KAAK,WAAWa,KAAK,OAAOC,SAAUN,KAAKX,qBADjF,KAGA,kBAAC,IAAD,CAAQgB,KAAK,SAASE,KAAK,SAASC,QAASR,KAAKrB,SAAlD,sB,GAjFQ8B,aCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b6f9e067.chunk.js","sourcesContent":["import { Table } from 'antd';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nconst AccountControlFlagsTable = (props) => {\r\n     //let dataSource = JSON.parse(props.dataSource);\r\n     const data = Object.fromEntries(Object.entries(JSON.parse(props.dataSource)).map(([accountControl, value]) => [accountControl, value]))\r\n     return (\r\n     <div>\r\n     <Table dataSource = {Array.from(props.dataSource)} columns = {props.columns}/>\r\n     </div>);\r\n};\r\nexport default AccountControlFlagsTable;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Button, Table } from 'antd';\r\nimport axios from 'axios';\r\nimport FlagTable from './Components/userAccountControlFlags';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { apiResponse: '', username: '' }; //firstname:'', lastname:'', password:'',\r\n    this.dataSource = [\r\n      {\r\n        key: '1',\r\n        name: 'Mike',\r\n        age: 32,\r\n        address: '10 Downing Street',\r\n      },\r\n      {\r\n        key: '2',\r\n        name: 'John',\r\n        age: 42,\r\n        address: '10 Downing Street',\r\n      },\r\n    ];\r\n\r\n   this.columns = [\r\n      {\r\n        title: 'UserAccountControl',\r\n        dataIndex: 'accountControl',\r\n        key: 'accountControl',\r\n      },\r\n      {\r\n        title: 'Value',\r\n        dataIndex: 'value',\r\n        key: 'value',\r\n      },\r\n    ];\r\n  }\r\n  callAPI = () => {\r\n    axios.post(\"/API/LDAP/Search\", {\r\n      //firstname: this.state.firstname,\r\n      //lastname: this.state.lastname,\r\n      //password: this.state.password,\r\n      username: this.state.username\r\n    })\r\n      .then(res => this.setState({ apiResponse: res.data }));\r\n  }\r\n  handleInputChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <p>\r\n            Enter the D.O.T. username you would like to check.\r\n          </p>\r\n        </header>\r\n        {this.state.apiResponse.username &&\r\n          <body className=\"App-response\">\r\n            <p> User: {this.state.apiResponse.username}</p>\r\n            <p> UserAccountControl : {this.state.apiResponse.userAccountControl} </p>\r\n            <p>LockoutTime: {this.state.apiResponse.lockoutTime} {this.state.apiResponse.lockedMSG}</p>\r\n            <FlagTable dataSource = {this.state.apiResponse.userAccountControlFlags} columns = {this.columns}/>\r\n          </body>\r\n\r\n        }\r\n        <form className=\"App-form\" >\r\n          {/* <span><label> First Name: \r\n              <input className=\"App-form-input\" name=\"firstname\" type=\"text\" color=\"black\" onChange={this.handleInputChange} />\r\n            </label></span>  */}\r\n          {/* <span><label> Last Name:\r\n              <input className=\"App-form-input\" name=\"lastname\" type=\"text\" onChange={this.handleInputChange}  />\r\n            </label> </span>\r\n            <span><label> Password:\r\n              <input className=\"App-form-input\" name=\"password\" type=\"password\" onChange={this.handleInputChange}/>\r\n            </label> </span> */}\r\n          <span><label> Check D.O.T. Username:\r\n              <input className=\"App-form-input\" name=\"username\" type=\"text\" onChange={this.handleInputChange} />\r\n          </label> </span>\r\n          <Button type=\"submit\" size=\"middle\" onClick={this.callAPI}> Check User </Button>\r\n        </form >\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}